name: main

on: [push, pull_request]

jobs:
  no-naked-pointers:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: configure tree
      run: ./configure --disable-naked-pointers --disable-stdlib-manpages
    - name: Build
      run: |
        make -j world.opt
    - name: Run the testsuite
      run: |
        make -C testsuite USE_RUNTIME=d all
  flambda:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: configure tree
      run: |
        XARCH=x64 CONFIG_ARG=--enable-flambda OCAMLRUNPARAM=b,v=0 bash -xe tools/ci/actions/runner.sh configure
    - name: Build
      run: |
        OCAMLRUNPARAM=b,v=0 bash -xe tools/ci/actions/runner.sh build
    - name: Run the testsuite
      run: |
        OCAMLRUNPARAM=b,v=0 bash -xe tools/ci/actions/runner.sh test
    - name: Install
      run: |
        OCAMLRUNPARAM=b,v=0 bash -xe tools/ci/actions/runner.sh install
    - name: Other checks
      run: |
        OCAMLRUNPARAM=b,v=0 bash -xe tools/ci/actions/runner.sh other-checks
  i386:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Packages
      run: |
        sudo apt install gcc-multilib gfortran-multilib
    - name: configure tree
      run: |
        XARCH=i386 CONFIG_ARG=--disable-stdlib-manpages bash -xe tools/ci/actions/runner.sh configure
    - name: Build
      run: |
        bash -xe tools/ci/actions/runner.sh build
    - name: Run the testsuite
      run: |
        bash -xe tools/ci/actions/runner.sh test
    - name: Install
      run: |
        bash -xe tools/ci/actions/runner.sh install
    - name: Other checks
      run: |
        bash -xe tools/ci/actions/runner.sh other-checks
  full:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Packages
      run: |
        sudo apt install texlive-latex-extra texlive-fonts-recommended
  # Ensure that make distclean can be run from an empty tree
    - name: distclean
      run: |
        make distclean
    - name: configure tree
      run: |
        XARCH=x64 bash -xe tools/ci/actions/runner.sh configure
    - name: Build
      run: |
        bash -xe tools/ci/actions/runner.sh build
    - name: Run the testsuite
      run: |
        bash -xe tools/ci/actions/runner.sh test
    - name: Install
      run: |
        bash -xe tools/ci/actions/runner.sh install
    - name: Other checks
      run: |
        bash -xe tools/ci/actions/runner.sh other-checks
  static:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: configure tree
      run: |
        XARCH=x64 CONFIG_ARG=--disable-shared bash -xe tools/ci/actions/runner.sh configure
    - name: Build
      run: |
        bash -xe tools/ci/actions/runner.sh build
    - name: Run the testsuite
      run: |
        bash -xe tools/ci/actions/runner.sh test
    - name: Install
      run: |
        bash -xe tools/ci/actions/runner.sh install
    - name: Other checks
      run: |
        bash -xe tools/ci/actions/runner.sh other-checks
  minimum:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: configure tree
      run: |
        XARCH=x64 MIN_BUILD=1 bash -xe tools/ci/actions/runner.sh configure
    - name: Build
      run: |
        MIN_BUILD=1 bash -xe tools/ci/actions/runner.sh build
    - name: Run the testsuite
      run: |
        MIN_BUILD=1 bash -xe tools/ci/actions/runner.sh test
    - name: Install
      run: |
        MIN_BUILD=1 bash -xe tools/ci/actions/runner.sh install
    - name: Other checks
      run: |
        MIN_BUILD=1 bash -xe tools/ci/actions/runner.sh other-checks
  parallel:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: configure tree
      run: |
        XARCH=x64 CONFIG_ARG=--enable-dependency-generation MAKE_ARG=-j bash -xe tools/ci/actions/runner.sh configure
    - name: Build
      run: |
        MAKE_ARG=-j bash -xe tools/ci/actions/runner.sh build
    - name: Run the testsuite
      run: |
        MAKE_ARG=-j bash -xe tools/ci/actions/runner.sh test
    - name: Install
      run: |
        MAKE_ARG=-j bash -xe tools/ci/actions/runner.sh install
    - name: Other checks
      run: |
        MAKE_ARG=-j bash -xe tools/ci/actions/runner.sh other-checks
