#!/usr/bin/env bash
#**************************************************************************
#*                                                                        *
#*                                 OCaml                                  *
#*                                                                        *
#*                            John Whitington                             *
#*                                                                        *
#*   Copyright 2020 Institut National de Recherche en Informatique et     *
#*     en automatique                                                     *
#*                                                                        *
#*   All rights reserved.  This file is distributed under the terms of    *
#*   the GNU Lesser General Public License version 2.1, with the          *
#*   special exception on linking described in the file LICENSE.          *
#*                                                                        *
#**************************************************************************

# Allow to be run from outside tools/
cd $(dirname "$0")/..

if [[ ! -d stdlib || ! -d otherlibs ]] ; then
  echo 'Cannot find the stdlib and otherlibs directories' >&2
  exit 1
fi

# Removes a label, i.e a space, a variable name, followed by a colon followed by
# an alphabetic character or ( or '. This should avoid altering the contents of
# comments.
LABREGEX="s/ [a-z_]+:([a-z\('])/ \1/g"

# A second, slightly different round sometimes required to deal with f:(key:key
LABLABREGEX="s/\([a-z_]+:([a-z\('])/\(\1/g"

# Remove a tilde if it is followed by a label name and a space or closing
# OCamldoc code section with ]
TILDEREGEX="s/~([a-z_]+[ \]])/\1/g"

# Indent a non-blank line by two characters, for moreLabels templates
INDENTREGEX="s/^(.+)$/  \1/m"

# Stdlib
perl -p -e "$LABREGEX" stdlib/ListLabels.mli > stdlib/List.temp.mli
perl -p -e "$LABREGEX" stdlib/ArrayLabels.mli > stdlib/Array.temp.mli
perl -p -e "$LABREGEX" stdlib/StringLabels.mli > stdlib/String.temp.mli
perl -p -e "$LABREGEX" stdlib/BytesLabels.mli > stdlib/Bytes.temp.mli

# Stdlib tildes
perl -p -e "$TILDEREGEX" stdlib/List.temp.mli > stdlib/List.mli
perl -p -e "$TILDEREGEX" stdlib/Array.temp.mli > stdlib/Array.mli
perl -p -e "$TILDEREGEX" stdlib/String.temp.mli > stdlib/String.mli
perl -p -e "$TILDEREGEX" stdlib/Bytes.temp.mli > stdlib/Bytes.mli

# FloatArrayLabels
perl -p -e "$LABREGEX" \
  stdlib/templates/Floatarraylabeled.template.mli > \
  stdlib/templates/Floatarrayunlabeled.temp.mli
perl -p -e "$TILDEREGEX" stdlib/templates/Floatarrayunlabeled.temp.mli > \
  stdlib/templates/Floatarrayunlabeled.2temp.mli
perl -p -e "$INDENTREGEX" stdlib/templates/Floatarraylabeled.template.mli > \
  stdlib/templates/Fal.indented.temp.mli
perl -p -e "$INDENTREGEX" stdlib/templates/Floatarrayunlabeled.2temp.mli > \
  stdlib/templates/Fau.indented.temp.mli
perl -p -e\
  's/FLOATARRAYLAB/`tail -n +17 stdlib\/templates\/Fal.indented.temp.mli`/e' \
  stdlib/templates/Float.template.mli > \
  stdlib/templates/Float.template.temp.mli
perl -p -e\
  's/FLOATARRAY/`tail -n +17 stdlib\/templates\/Fau.indented.temp.mli`/e' \
  stdlib/templates/Float.template.temp.mli > \
  stdlib/Float.mli

# MoreLabels
perl -p -e "$LABREGEX" \
  stdlib/templates/Hashtbl.template.mli > stdlib/Hashtbl.temp.mli
perl -p -e "$LABLABREGEX" \
  stdlib/Hashtbl.temp.mli > stdlib/Hashtbl.2temp.mli
perl -p -e "$LABREGEX" \
  stdlib/templates/Map.template.mli > stdlib/Map.temp.mli
perl -p -e "$LABLABREGEX" \
  stdlib/Map.temp.mli > stdlib/Map.2temp.mli
perl -p -e "$LABREGEX" \
  stdlib/templates/Set.template.mli > stdlib/Set.temp.mli
perl -p -e "$LABLABREGEX" \
  stdlib/Set.temp.mli > stdlib/Set.2temp.mli

# MoreLabels tildes
perl -p -e "$TILDEREGEX" stdlib/Hashtbl.2temp.mli > stdlib/Hashtbl.mli
perl -p -e "$TILDEREGEX" stdlib/Map.2temp.mli > stdlib/Map.mli
perl -p -e "$TILDEREGEX" stdlib/Set.2temp.mli > stdlib/Set.mli

# Indent the labeled modules
perl -p -e "$INDENTREGEX" stdlib/templates/Hashtbl.template.mli > \
  stdlib/templates/Hashtbl.template.temp.mli
perl -p -e "$INDENTREGEX" stdlib/templates/Map.template.mli > \
  stdlib/templates/Map.template.temp.mli
perl -p -e "$INDENTREGEX" stdlib/templates/Set.template.mli > \
  stdlib/templates/Set.template.temp.mli

# Substitute the labeled modules in to moreLabels.mli
perl -p -e\
  's/HASHTBL/`tail -n +19 stdlib\/templates\/Hashtbl.template.temp.mli`/e' \
  stdlib/templates/MoreLabels.template.mli > stdlib/MoreLabels.temp.mli
perl -p -e 's/MAP/`tail -n +19 stdlib\/templates\/Map.template.temp.mli`/e' \
  stdlib/MoreLabels.temp.mli > stdlib/MoreLabels.2temp.mli
perl -p -e 's/SET/`tail -n +19 stdlib\/templates\/Set.template.temp.mli`/e' \
  stdlib/MoreLabels.2temp.mli > stdlib/MoreLabels.mli

# Fix up with templates in tools/unlabel-patches
perl -p -e "s/type statistics =/type statistics = Hashtbl\.statistics =/" \
  stdlib/MoreLabels.mli > stdlib/MoreLabels.temp.mli
perl -p -e "s/type \(!'a, !'b\) t/type \(!'a, !'b\) t = \('a, 'b) Hashtbl.t/" \
  stdlib/MoreLabels.temp.mli > stdlib/MoreLabels.2temp.mli
perl -p -e\
  "s/module Make \(H : HashedType\) : S with type key = H.t\
/`cat tools/unlabel-patches/1.mli`/" \
  stdlib/MoreLabels.2temp.mli > stdlib/MoreLabels.3temp.mli
perl -p -e\
  "s/module MakeSeeded \(H : SeededHashedType\) : SeededS with type key = H.t\
/`cat tools/unlabel-patches/2.mli`/" \
  stdlib/MoreLabels.3temp.mli > stdlib/MoreLabels.4temp.mli
perl -p -e\
  "s/module Make \(Ord : OrderedType\) : S with type key = Ord.t\
/`cat tools/unlabel-patches/3.mli`/" \
  stdlib/MoreLabels.4temp.mli > stdlib/MoreLabels.5temp.mli
perl -p -e\
  "s/module Make \(Ord : OrderedType\) : S with type elt = Ord.t\
/`cat tools/unlabel-patches/4.mli`/" \
  stdlib/MoreLabels.5temp.mli > stdlib/MoreLabels.mli

# Unix
perl -p -e "$LABREGEX" \
  otherlibs/unix/unixLabels.mli > otherlibs/unix/unix.temp.mli
# Tildes
perl -p -e "$TILDEREGEX" \
  otherlibs/unix/unix.temp.mli > otherlibs/unix/unix.2temp.mli

# Remove type equivalences from unix.mli
perl -p -e 's/ = Unix.[a-z_]+//' \
  otherlibs/unix/unix.2temp.mli > otherlibs/unix/unix.3temp.mli
perl -p -e 's/ = Unix.LargeFile.stats//' \
  otherlibs/unix/unix.3temp.mli > otherlibs/unix/unix.mli

# Clean up
rm -f stdlib/*temp.mli
rm -f otherlibs/unix/*temp.mli
rm -f stdlib/templates/*temp.mli
