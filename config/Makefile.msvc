#**************************************************************************
#*                                                                        *
#*                                 OCaml                                  *
#*                                                                        *
#*            Xavier Leroy, projet Cristal, INRIA Rocquencourt            *
#*                                                                        *
#*   Copyright 1999 Institut National de Recherche en Informatique et     *
#*     en Automatique.                                                    *
#*                                                                        *
#*   All rights reserved.  This file is distributed under the terms of    *
#*   the GNU Lesser General Public License version 2.1, with the          *
#*   special exception on linking described in the file LICENSE.          *
#*                                                                        *
#**************************************************************************

# Configuration for Windows, Visual C++ compiler

######### General configuration

prefix=C:/ocamlms
exec_prefix=${prefix}

### Where to install the binaries.
BINDIR=${exec_prefix}/bin

### Where to install the standard library
LIBDIR=${exec_prefix}/lib/ocaml

### Where to install the stub DLLs
STUBLIBDIR=${exec_prefix}/lib/ocaml/stublibs

### Where to install the man pages
MANDIR=${prefix}/man

########## Toolchain and OS dependencies

PROGRAMS_MAN_SECTION=1
LIBRARIES_MAN_SECTION=3
HASHBANGSCRIPTS=false

### Which C compiler to use for the bytecode interpreter.
CC=cl
CC_HAS_DEBUG_PREFIX_MAP=false
AS_HAS_DEBUG_PREFIX_MAP=false
OC_LDFLAGS=/ENTRY:wmainCRTStartup
### How to invoke the C preprocessor
CPP=cl -nologo -EP

### The ranlib command
RANLIB=echo
RANLIBCMD=

### The ar command
ARCMD=

O=obj
EXT_OBJ=.obj
OUTPUTOBJ=-Fo
A=lib
EXT_LIB=.lib
S=asm
EXT_ASM=.asm
SO=dll
EXT_DLL=.dll
SHAREDLIB_CFLAGS=
RPATH=

### Name of architecture for the native-code compiler
ARCH=i386
ARCH64=false

### Name of architecture model for the native-code compiler.
MODEL=default

### Name of operating system family for the native-code compiler.
SYSTEM=win32
ASM=ml -nologo -coff -Cp -c -Fo
ASPP=

### Set to "true" to install ".byte" executables (ocamlc.byte, etc.)
INSTALL_BYTECODE_PROGRAMS=true

############# Configuration for the contributed libraries

OTHERLIBRARIES=win32unix str dynlink bigarray systhreads
PTHREAD_LINK=
PTHREAD_CAML_LINK=$(addprefix -cclib ,$(PTHREAD_LINK))
UNIX_OR_WIN32=win32
UNIXLIB=win32unix

########## Configuration for the bytecode compiler
OC_CFLAGS=-nologo -O2 -Gy- -MD
OC_CPPFLAGS=-D_CRT_SECURE_NO_DEPRECATE -DCAML_NAME_SPACE -DUNICODE -D_UNICODE -DWINDOWS_UNICODE=$(WINDOWS_UNICODE)
OCAMLC_CFLAGS=-nologo -O2 -Gy- -MD

OCAMLC_CPPFLAGS=-D_CRT_SECURE_NO_DEPRECATE
### Libraries needed
BYTECCLIBS=advapi32.lib ws2_32.lib version.lib
EXE=.exe
OUTPUTEXE=-Fe
SUPPORTS_SHARED_LIBRARIES=true
MKSHAREDLIBRPATH=
DYNLINKOPTS=
NATDYNLINK=true
NATDYNLINKOPTS=

### Canonicalize the name of a system library
SYSLIB=$(1).lib

### How to build a static library
MKLIB=link -lib -nologo /out:$(1) $(2)

############# Configuration for the native-code compiler

OCAMLOPT_CFLAGS=-nologo -O2 -Gy- -MD
OCAMLOPT_CPPFLAGS=-D_CRT_SECURE_NO_DEPRECATE
NATIVECCLIBS=advapi32.lib ws2_32.lib version.lib
SYSTHREAD_SUPPORT=true

### Build partially-linked object file
PACKLD=link -lib -nologo -out:

### Flexlink
FLEXLINK_CMD=flexlink
# FLEXLINK_FLAGS must be safe to insert in an OCaml string
#   (see ocamlmklibconfig.ml in tools/Makefile)
FLEXLINK_FLAGS=-merge-manifest -stack 16777216
FLEXLINK=$(FLEXLINK_CMD) $(FLEXLINK_FLAGS)
FLEXDIR:=$(shell $(FLEXLINK) -where 2>/dev/null)
ifeq ($(FLEXDIR),)
IFLEXDIR=-I"../flexdll"
else
IFLEXDIR=-I"$(FLEXDIR)"
endif
EXTRALIBS=
CCOMPTYPE=msvc
TOOLCHAIN=msvc
CMXS=cmxs

# MKDLL, MKEXE and MKMAINDLL must ultimately be equivalent to
#   $(FLEXLINK_CMD) $(FLEXLINK_FLAGS) [-exe|-maindll]
# or OCAML_FLEXLINK overriding will not work (see utils/config.mlp)
MKEXE=$(MKEXE_ANSI) $(if $(OC_LDFLAGS),-link "$(OC_LDFLAGS)")
MKDLL=$(FLEXLINK)
MKMAINDLL=$(FLEXLINK) -maindll
MKEXEDEBUGFLAG=
RUNTIMED=true

### Clear this to disable compiling ocamldebug
WITH_DEBUGGER=ocamldebugger

### Clear this to disable compiling ocamldoc
WITH_OCAMLDOC=ocamldoc

ASM_CFI_SUPPORTED=false
WITH_FRAME_POINTERS=false
WITH_SPACETIME=false
ENABLE_CALL_COUNTS=true
WITH_PROFINFO=false
PROFINFO_WIDTH=0
LIBUNWIND_AVAILABLE=false
LIBUNWIND_LINK_FLAGS=
# It doesn't make much sense to set "TARGET" and "HOST" for msvc but it's needed
# for the myocamlbuild config.
# The only case these will be used currently is to check whether we're
# cross-compiling or not so setting them to the same value is what matters.
TARGET=$(HOST)
HOST=msvc

FLAMBDA=false
WITH_FLAMBDA_INVARIANTS=false
FORCE_SAFE_STRING=false
DEFAULT_SAFE_STRING=true
WINDOWS_UNICODE=1
AFL_INSTRUMENT=false
MAX_TESTSUITE_DIR_RETRIES=1
FLAT_FLOAT_ARRAY=true
AWK=gawk

### Native command to build ocamlrun.exe without flexlink
    MERGEMANIFESTEXE=test ! -f $(1).manifest \
	           || mt -nologo -outputresource:$(1) -manifest $(1).manifest \
	           && rm -f $(1).manifest
    MKEXE_BOOT=$(CC) $(OC_CFLAGS) $(OUTPUTEXE)$(1) $(2) \
      /link /subsystem:console $(OC_LDFLAGS) && ($(MERGEMANIFESTEXE))
############# for the testsuite makefiles

  OTOPDIR=$(WINTOPDIR)
  CTOPDIR=$(WINTOPDIR)
  CYGPATH=cygpath -m
  DIFF=/usr/bin/diff -q --strip-trailing-cr
  FIND=/usr/bin/find
  SORT=/usr/bin/sort
  SET_LD_PATH=PATH="$(PATH):$(LD_PATH)"

### Native command to build an ANSI executable
  MKEXE_ANSI=$(FLEXLINK) -exe
  FLEXDLL_CHAIN=msvc
