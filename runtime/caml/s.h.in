/**************************************************************************/
/*                                                                        */
/*                                 OCaml                                  */
/*                                                                        */
/*             Xavier Leroy, projet Cristal, INRIA Rocquencourt           */
/*                                                                        */
/*   Copyright 1996 Institut National de Recherche en Informatique et     */
/*     en Automatique.                                                    */
/*                                                                        */
/*   All rights reserved.  This file is distributed under the terms of    */
/*   the GNU Lesser General Public License version 2.1, with the          */
/*   special exception on linking described in the file LICENSE.          */
/*                                                                        */
/**************************************************************************/

/* Operating system and standard library configuration. */

/* 0. Operating system type string. */

#undef OCAML_OS_TYPE
/* #define OCAML_OS_TYPE "Unix" */
/* #define OCAML_OS_TYPE "Win32" */
/* #define OCAML_OS_TYPE "MacOS" */

/* 1. For the runtime system. */

#undef POSIX_SIGNALS

/* Define POSIX_SIGNALS if signal handling is POSIX-compliant.
   In particular, sigaction(), sigprocmask() and the operations on
   sigset_t are provided. */

#undef BSD_SIGNALS

/* Define BSD_SIGNALS if signal handlers have the BSD semantics: the handler
   remains attached to the signal when the signal is received. Leave it
   undefined if signal handlers have the System V semantics: the signal
   resets the behavior to default. */

#undef SUPPORT_DYNAMIC_LINKING

/* Define SUPPORT_DYNAMIC_LINKING if dynamic loading of C stub code
   via dlopen() is available. */

#undef HAS_FULL_THREAD_VARIABLES

/* Define HAS_FULL_THREAD_VARIABLES if C11 __thread variables are fully
   supported, including across DLLs.  This is not the case with
   macOS and with Windows + MinGW-64. */

#undef HAS_C99_FLOAT_OPS

/* Define HAS_C99_FLOAT_OPS if <math.h> conforms to ISO C99.
   In particular, it should provide expm1(), log1p(), hypot(), fma(),
   exp2(), log2(), cbrt(), acosh(), asinh(), atanh(), erf(), erfc(),
   trunc(), round(), copysign(). */

#undef HAS_WORKING_FMA

/* Define HAS_WORKING_FMA if the fma function is correctly implemented. The
   newlib library (intentionally) just has return x * y + z. This hatch is
   also used for https://sourceforge.net/p/mingw-w64/bugs/848/ */

#undef HAS_WORKING_ROUND

/* Define HAS_WORKING_ROUND is the round function is correctly implemented. This
   hatch exists primarily for https://sourceforge.net/p/mingw-w64/bugs/573/ */

#undef HAS_GETENTROPY

#undef HAS_GETRUSAGE

#undef HAS_TIMES

#undef HAS_SECURE_GETENV

#undef HAS___SECURE_GETENV

#undef HAS_ISSETUGID

#undef HAS_STDATOMIC_H

#undef HAS_SYS_MMAN_H

/* 2. For the Unix library. */

#undef HAS_SOCKETS

/* Define HAS_SOCKETS if you have BSD sockets. */

#undef HAS_SOCKETPAIR

/* Define HAS_SOCKETPAIR if you have the socketpair function. Only
   relevant on Windows. */

#undef HAS_AFUNIX_H

/* Define HAS_AFUNIX_H if you have <afunix.h>. */

#undef HAS_STDINT_H

#undef HAS_PTHREAD_NP_H

#undef HAS_UNISTD

/* Define HAS_UNISTD if you have /usr/include/unistd.h. */

#undef HAS_DIRENT

/* Define HAS_DIRENT if you have /usr/include/dirent.h and the result of
   readdir() is of type struct dirent *.
   Otherwise, we'll load /usr/include/sys/dir.h, and readdir() is expected to
   return a struct direct *. */

#undef HAS_GETCWD

/* Define HAS_GETCWD if the library provides the getcwd() function. */

#undef HAS_SYSTEM

/* Define HAS_SYSTEM if the library provides the system() function. */

#undef HAS_SETGROUPS

/* Define HAS_SETGROUPS if you have setgroups(). */

#undef HAS_INITGROUPS

/* Define HAS_INITGROUPS if you have initgroups(). */

#undef HAS_GETTIMEOFDAY

/* Define HAS_GETTIMEOFDAY if you have gettimeofday(). */

#undef HAS_SETENV_UNSETENV

/* Define HAS_SETENV_UNSETENV if you have setenv() and unsetenv(). */

#undef HAS_LOCALE_H

/* Define HAS_LOCALE_H if you have the include file <locale.h> and the
   uselocale() function. */

#undef HAS_XLOCALE_H

/* Define HAS_XLOCALE_H if you have the include file <xlocale.h> and the
   uselocale() function. */

#undef HAS_STRTOD_L

/* Define HAS_STRTOD_L if you have strtod_l */

#undef HAS_NANOSECOND_STAT

#undef HAS_GETHOSTBYNAME_R

/* Define HAS_GETHOSTBYNAME_R if gethostbyname_r() is available.
   The value of this symbol is the number of arguments of
   gethostbyname_r(): either 5 or 6 depending on prototype.
   (5 is the Solaris version, 6 is the Linux version). */

#undef HAS_GETHOSTBYADDR_R 8

/* Define HAS_GETHOSTBYADDR_R if gethostbyname_r() is available.
   The value of this symbol is the number of arguments of
   gethostbyaddr_r(): either 7 or 8 depending on prototype.
   (7 is the Solaris version, 8 is the Linux version). */

#undef HAS_MKSTEMP

#undef HAS_DUP3

#undef HAS_PIPE2

#undef HAS_ACCEPT4

#undef HAS_GETAUXVAL

#undef HAS_SYS_SHM_H

#undef HAS_SHMAT

#undef HAS_EXECVPE

#undef HAS_FFS
#undef HAS_BITSCANFORWARD

#undef HAS_SIGWAIT

#undef HAS_HUGE_PAGES

#undef HUGE_PAGE_SIZE

#undef HAS_BROKEN_PRINTF

#undef HAS_STRERROR

#undef HAS_POSIX_MONOTONIC_CLOCK

#undef HAS_MACH_ABSOLUTE_TIME

#undef HAS_GNU_GETAFFINITY_NP
#undef HAS_BSD_GETAFFINITY_NP
