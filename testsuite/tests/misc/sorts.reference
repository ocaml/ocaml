Command line arguments are:
Testing List.sort...
  List.sort with constant ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.sort with sorted ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.sort with reverse-sorted ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.sort with random ints (many dups)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.sort with random ints (few dups)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.sort with records (str)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.sort with records (int[1])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.sort with records (int[10])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.sort with records (int[100])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.sort with records (int[1000])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
Testing List.stable_sort...
  List.stable_sort with constant ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with sorted ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with reverse-sorted ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with random ints (many dups)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with random ints (few dups)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with records (str)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with records (int[1])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with records (int[10])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with records (int[100])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with records (int[1000])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with records (int[1]) [stable]
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with records (int[10]) [stable]
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with records (int[100]) [stable]
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  List.stable_sort with records (int[1000]) [stable]
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
Testing Array.sort...
  Array.sort with constant ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.sort with sorted ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.sort with reverse-sorted ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.sort with random ints (many dups)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.sort with random ints (few dups)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.sort with records (str)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.sort with records (int[1])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.sort with records (int[10])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.sort with records (int[100])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.sort with records (int[1000])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
Testing Array.stable_sort...
  Array.stable_sort with constant ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with sorted ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with reverse-sorted ints
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with random ints (many dups)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with random ints (few dups)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with records (str)
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with records (int[1])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with records (int[10])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with records (int[100])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with records (int[1000])
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with records (int[1]) [stable]
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with records (int[10]) [stable]
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with records (int[100]) [stable]
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
  Array.stable_sort with records (int[1000]) [stable]
        0.    1.    2.    3.    4.    5.    6.    7.    8.    9.   10.   11.
       12.   13.   28.  100.  127.  128.  129.  193.  506. 1000. 1025. 1535.
     2323.
Number of tests failed: 0
