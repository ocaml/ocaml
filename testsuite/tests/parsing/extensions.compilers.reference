[
  structure_item (extensions.ml[9,153+0]..[9,153+22])
    Pstr_extension "foo"
    [
      structure_item (extensions.ml[9,153+7]..[9,153+21])
        Pstr_eval
        expression (extensions.ml[9,153+7]..[9,153+21])
          Pexp_let Nonrec
          [
            <def>
              pattern (extensions.ml[9,153+11]..[9,153+12])
                Ppat_var "x" (extensions.ml[9,153+11]..[9,153+12])
              expression (extensions.ml[9,153+15]..[9,153+16])
                Pexp_constant PConst_int (1,None)
          ]
          expression (extensions.ml[9,153+20]..[9,153+21])
            Pexp_ident "x" (extensions.ml[9,153+20]..[9,153+21])
    ]
  structure_item (extensions.ml[10,176+0]..[10,176+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (extensions.ml[10,176+4]..[10,176+46]) ghost
          Ppat_constraint
          pattern (extensions.ml[10,176+4]..[10,176+14])
            Ppat_extension "foo"
            [
              structure_item (extensions.ml[10,176+10]..[10,176+13])
                Pstr_eval
                expression (extensions.ml[10,176+10]..[10,176+13])
                  Pexp_apply
                  expression (extensions.ml[10,176+11]..[10,176+12])
                    Pexp_ident "+" (extensions.ml[10,176+11]..[10,176+12])
                  [
                    <arg>
                    Nolabel
                      expression (extensions.ml[10,176+10]..[10,176+11])
                        Pexp_constant PConst_int (2,None)
                    <arg>
                    Nolabel
                      expression (extensions.ml[10,176+12]..[10,176+13])
                        Pexp_constant PConst_int (1,None)
                  ]
            ]
          core_type (extensions.ml[10,176+17]..[10,176+31])
            Ptyp_extension "foo"
            [
              structure_item (extensions.ml[10,176+23]..[10,176+30])
                Pstr_eval
                expression (extensions.ml[10,176+23]..[10,176+30])
                  Pexp_field
                  expression (extensions.ml[10,176+23]..[10,176+26])
                    Pexp_ident "bar" (extensions.ml[10,176+23]..[10,176+26])
                  "baz" (extensions.ml[10,176+27]..[10,176+30])
            ]
        expression (extensions.ml[10,176+34]..[10,176+46])
          Pexp_extension "foo"
          [
            structure_item (extensions.ml[10,176+40]..[10,176+45])
              Pstr_eval
              expression (extensions.ml[10,176+40]..[10,176+45])
                Pexp_constant PConst_string("foo",None)
          ]
    ]
  structure_item (extensions.ml[12,224+0]..[12,224+26])
    Pstr_extension "foo"
    [
      structure_item (extensions.ml[12,224+7]..[12,224+24])
        Pstr_module
        "M" (extensions.ml[12,224+14]..[12,224+15])
          module_expr (extensions.ml[12,224+18]..[12,224+24])
            Pmod_extension "bar"
            []
    ]
  structure_item (extensions.ml[13,251+0]..[13,251+74])
    Pstr_value Nonrec
    [
      <def>
        pattern (extensions.ml[13,251+4]..[13,251+74]) ghost
          Ppat_constraint
          pattern (extensions.ml[13,251+4]..[13,251+23])
            Ppat_extension "foo"
            [
              structure_item (extensions.ml[13,251+10]..[13,251+21])
                Pstr_value Nonrec
                [
                  <def>
                    pattern (extensions.ml[13,251+14]..[13,251+16])
                      Ppat_construct "()" (extensions.ml[13,251+14]..[13,251+16])
                      None
                    expression (extensions.ml[13,251+19]..[13,251+21])
                      Pexp_construct "()" (extensions.ml[13,251+19]..[13,251+21])
                      None
                ]
            ]
          core_type (extensions.ml[13,251+26]..[13,251+44])
            Ptyp_extension "foo"
            [
              structure_item (extensions.ml[13,251+32]..[13,251+42])
                Pstr_type Rec
                [
                  type_declaration "t" (extensions.ml[13,251+37]..[13,251+38]) (extensions.ml[13,251+32]..[13,251+42])
                    ptype_params =
                      []
                    ptype_cstrs =
                      []
                    ptype_kind =
                      Ptype_abstract
                    ptype_private = Public
                    ptype_manifest =
                      Some
                        core_type (extensions.ml[13,251+41]..[13,251+42])
                          Ptyp_constr "t" (extensions.ml[13,251+41]..[13,251+42])
                          []
                ]
            ]
        expression (extensions.ml[13,251+47]..[13,251+74])
          Pexp_extension "foo"
          [
            structure_item (extensions.ml[13,251+53]..[13,251+73])
              Pstr_class
              [
                class_declaration (extensions.ml[13,251+53]..[13,251+73])
                  pci_virt = Concrete
                  pci_params =
                    []
                  pci_name = "c" (extensions.ml[13,251+59]..[13,251+60])
                  pci_expr =
                    class_expr (extensions.ml[13,251+63]..[13,251+73])
                      Pcl_structure
                      class_structure
                        pattern (extensions.ml[13,251+69]..[13,251+69]) ghost
                          Ppat_any
                        []
              ]
          ]
    ]
  structure_item (extensions.ml[15,327+0]..[15,327+16])
    Pstr_extension "foo"
    core_type (extensions.ml[15,327+8]..[15,327+15])
      Ptyp_constr "list" (extensions.ml[15,327+11]..[15,327+15])
      [
        core_type (extensions.ml[15,327+8]..[15,327+10])
          Ptyp_var a
      ]
  structure_item (extensions.ml[16,344+0]..[16,344+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (extensions.ml[16,344+4]..[16,344+60]) ghost
          Ppat_constraint
          pattern (extensions.ml[16,344+4]..[16,344+19])
            Ppat_extension "foo"
            core_type (extensions.ml[16,344+11]..[16,344+17])
              Ptyp_variant closed=Closed
              [
                Rtag "Foo" true
                  []
              ]
              None
          core_type (extensions.ml[16,344+22]..[16,344+37])
            Ptyp_extension "foo"
            core_type (extensions.ml[16,344+29]..[16,344+35])
              Ptyp_arrow
              Nolabel
              core_type (extensions.ml[16,344+29]..[16,344+30])
                Ptyp_constr "t" (extensions.ml[16,344+29]..[16,344+30])
                []
              core_type (extensions.ml[16,344+34]..[16,344+35])
                Ptyp_constr "t" (extensions.ml[16,344+34]..[16,344+35])
                []
        expression (extensions.ml[16,344+40]..[16,344+60])
          Pexp_extension "foo"
          core_type (extensions.ml[16,344+47]..[16,344+58])
            Ptyp_object Closed
              method foo
                core_type (extensions.ml[16,344+55]..[16,344+56])
                  Ptyp_constr "t" (extensions.ml[16,344+55]..[16,344+56])
                  []
    ]
  structure_item (extensions.ml[18,406+0]..[18,406+11])
    Pstr_extension "foo"
    pattern (extensions.ml[18,406+8]..[18,406+9])
      Ppat_any
  structure_item (extensions.ml[19,418+0]..[19,418+26])
    Pstr_extension "foo"
    pattern (extensions.ml[19,418+8]..[19,418+14])
      Ppat_construct "Some" (extensions.ml[19,418+8]..[19,418+12])
      Some
        pattern (extensions.ml[19,418+13]..[19,418+14])
          Ppat_var "y" (extensions.ml[19,418+13]..[19,418+14])
    <when>
      expression (extensions.ml[19,418+20]..[19,418+25])
        Pexp_apply
        expression (extensions.ml[19,418+22]..[19,418+23])
          Pexp_ident ">" (extensions.ml[19,418+22]..[19,418+23])
        [
          <arg>
          Nolabel
            expression (extensions.ml[19,418+20]..[19,418+21])
              Pexp_ident "y" (extensions.ml[19,418+20]..[19,418+21])
          <arg>
          Nolabel
            expression (extensions.ml[19,418+24]..[19,418+25])
              Pexp_constant PConst_int (0,None)
        ]
  structure_item (extensions.ml[20,445+0]..[20,445+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (extensions.ml[20,445+4]..[20,445+60]) ghost
          Ppat_constraint
          pattern (extensions.ml[20,445+4]..[20,445+28])
            Ppat_extension "foo"
            pattern (extensions.ml[20,445+11]..[20,445+26])
              Ppat_or
              pattern (extensions.ml[20,445+12]..[20,445+17])
                Ppat_construct "Bar" (extensions.ml[20,445+12]..[20,445+15])
                Some
                  pattern (extensions.ml[20,445+16]..[20,445+17])
                    Ppat_var "x" (extensions.ml[20,445+16]..[20,445+17])
              pattern (extensions.ml[20,445+20]..[20,445+25])
                Ppat_construct "Baz" (extensions.ml[20,445+20]..[20,445+23])
                Some
                  pattern (extensions.ml[20,445+24]..[20,445+25])
                    Ppat_var "x" (extensions.ml[20,445+24]..[20,445+25])
          core_type (extensions.ml[20,445+31]..[20,445+44])
            Ptyp_extension "foo"
            pattern (extensions.ml[20,445+38]..[20,445+42])
              Ppat_type
              "bar" (extensions.ml[20,445+39]..[20,445+42])
        expression (extensions.ml[20,445+47]..[20,445+60])
          Pexp_extension "foo"
          pattern (extensions.ml[20,445+54]..[20,445+59])
            Ppat_record Closed
            [
              "x" (extensions.ml[20,445+56]..[20,445+57])
                pattern (extensions.ml[20,445+56]..[20,445+57])
                  Ppat_var "x" (extensions.ml[20,445+56]..[20,445+57])
            ]
    ]
  structure_item (extensions.ml[22,507+0]..[22,507+26])
    Pstr_extension "foo"
    [
      signature_item (extensions.ml[22,507+8]..[22,507+25])
        Psig_module "M" (extensions.ml[22,507+15]..[22,507+16])
        module_type (extensions.ml[22,507+19]..[22,507+25])
          Pmod_extension "baz"
          []
    ]
  structure_item (extensions.ml[23,534+0]..[25,606+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (extensions.ml[23,534+4]..[25,606+23]) ghost
          Ppat_constraint
          pattern (extensions.ml[23,534+4]..[23,534+38])
            Ppat_extension "foo"
            [
              signature_item (extensions.ml[23,534+11]..[23,534+36])
                Psig_include
                module_type (extensions.ml[23,534+19]..[23,534+36])
                  Pmty_with
                  module_type (extensions.ml[23,534+19]..[23,534+20])
                    Pmty_ident "S" (extensions.ml[23,534+19]..[23,534+20])
                  [
                    Pwith_type "t" (extensions.ml[23,534+31]..[23,534+32])
                      type_declaration "t" (extensions.ml[23,534+31]..[23,534+32]) (extensions.ml[23,534+26]..[23,534+36])
                        ptype_params =
                          []
                        ptype_cstrs =
                          []
                        ptype_kind =
                          Ptype_abstract
                        ptype_private = Public
                        ptype_manifest =
                          Some
                            core_type (extensions.ml[23,534+35]..[23,534+36])
                              Ptyp_constr "t" (extensions.ml[23,534+35]..[23,534+36])
                              []
                  ]
            ]
          core_type (extensions.ml[24,573+4]..[24,573+32])
            Ptyp_extension "foo"
            [
              signature_item (extensions.ml[24,573+11]..[24,573+20])
                Psig_value
                value_description "x" (extensions.ml[24,573+15]..[24,573+16]) (extensions.ml[24,573+11]..[24,573+20])
                  core_type (extensions.ml[24,573+19]..[24,573+20])
                    Ptyp_constr "t" (extensions.ml[24,573+19]..[24,573+20])
                    []
                  []
              signature_item (extensions.ml[24,573+22]..[24,573+31])
                Psig_value
                value_description "y" (extensions.ml[24,573+26]..[24,573+27]) (extensions.ml[24,573+22]..[24,573+31])
                  core_type (extensions.ml[24,573+30]..[24,573+31])
                    Ptyp_constr "t" (extensions.ml[24,573+30]..[24,573+31])
                    []
                  []
            ]
        expression (extensions.ml[25,606+4]..[25,606+23])
          Pexp_extension "foo"
          [
            signature_item (extensions.ml[25,606+11]..[25,606+21])
              Psig_type Rec
              [
                type_declaration "t" (extensions.ml[25,606+16]..[25,606+17]) (extensions.ml[25,606+11]..[25,606+21])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (extensions.ml[25,606+20]..[25,606+21])
                        Ptyp_constr "t" (extensions.ml[25,606+20]..[25,606+21])
                        []
              ]
          ]
    ]
]

File "extensions.ml", line 9, characters 3-6:
Error: Uninterpreted extension 'foo'.
