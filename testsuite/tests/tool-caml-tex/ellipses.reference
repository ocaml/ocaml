(* TEST
   reference="${test_source_directory}/ellipses.reference"
   output="ellipses.output"
   script = "${ocamlrun} ${ocamlsrcdir}/tools/caml-tex \
   -repo-root ${ocamlsrcdir} ${test_source_directory}/${test_file} -o ${output}"
  * hasstr
  ** native-compiler
  *** shared-libraries
  **** script with unix,str
  ***** check-program-output
*)

\camlexample{verbatim}
\caml\camlinput\?let start = 0
\?\ldots
\?let mid = succ hidden
\?\ldots

\?module E = struct end
\?\ldots

\?let expr = \ldots

\?let pat = match start with
\?  | \ldots | 1 -> succ expr
\?  | _ -> succ expr

\?let case = match start with
\?  | 0 -> succ pat
\?  | \ldots


\?let annot: \ldots = succ case

\?let subexpr = succ annot + (\ldots * 2) - 2

\?\ldots

\?class c2 = object
\?  \ldots
\?  val y = 1
\?  \ldots
\?  method n = 3
\?  \ldots
\?end

\?type t = \ldots | B \ldots | F
\?type arrow = int -> (\ldots)
\?type record = { a:int; \ldots c:int;
\?                \ldots
\?                g:int }
\?type polyvar = [\textasciigrave\-A|\ldots |\textasciigrave\-C
\?               |\ldots
\?               | \textasciigrave\-G ]
\?type exn += \ldots | B \ldots | F
\endcamlinput
\endcaml
\endcamlexample
