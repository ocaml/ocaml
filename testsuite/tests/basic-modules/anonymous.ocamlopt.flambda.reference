(seq (ignore (let (x = [0: 13 37]) (makeblock 0 x)))
  (let
    (A =
       (apply (field 0 (global CamlinternalMod!)) [0: "anonymous.ml" 25 6]
         [0: [0]])
     B =
       (apply (field 0 (global CamlinternalMod!)) [0: "anonymous.ml" 35 6]
         [0: [0]]))
    (seq (ignore (let (x = [0: 4 2]) (makeblock 0 x)))
      (apply (field 1 (global CamlinternalMod!)) [0: [0]] A
        (module-defn(A) Anonymous anonymous.ml(23):567-608 A))
      (apply (field 1 (global CamlinternalMod!)) [0: [0]] B
        (module-defn(B) Anonymous anonymous.ml(33):703-773
          (let (x = [0: "foo" "bar"]) (makeblock 0))))
      (let (f = (function param 0) s = (makemutable 0 ""))
        (seq
          (ignore
            (let (*match* = (setfield_ptr 0 s "Hello World!")) (makeblock 0)))
          (let
            (drop = (function param 0)
             *match* = (apply drop (field_mut 0 s)))
            (makeblock 0 A B f s drop)))))))
