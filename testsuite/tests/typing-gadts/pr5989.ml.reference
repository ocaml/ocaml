
type (_, _) t = Any : ('a, 'b) t | Eq : ('a, 'a) t
module M : sig type s = private [> `A ] val eq : (s, [ `A | `B ]) t end
Characters 40-65:
  .......................................function
    | Any -> "Any"
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Eq
val f : (M.s, [ `A | `B ]) t -> string = <fun>
Exception: Match_failure ("//toplevel//", 14, 39).
module N :
  sig
    type s = private < a : int; .. >
    val eq : (s, < a : int; b : bool >) t
  end
Characters 50-75:
  .................................................function
    | Any -> "Any"
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Eq
val f : (N.s, < a : int; b : bool >) t -> string = <fun>

