
#         module A : sig type nil = Cstr end
#                         type _ s = Nil : A.nil s | Cons : 't s -> ('h -> 't) s
type ('stack, 'typ) var =
    Head : (('typ -> 'a) s, 'typ) var
  | Tail : ('tail s, 'typ) var -> (('b -> 'tail) s, 'typ) var
type _ lst = CNil : A.nil lst | CCons : 'h * 't lst -> ('h -> 't) lst
#           val get_var : ('stk s, 'ret) var -> 'stk lst -> 'ret = <fun>
# 
