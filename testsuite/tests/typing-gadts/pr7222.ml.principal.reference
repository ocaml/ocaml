
#           type +'a n = private int
type nil = private Nil_type
type (_, _) elt =
    Elt_fine : 'nat n -> ('l, 'nat * 'l) elt
  | Elt : 'nat n -> ('l, 'nat -> 'l) elt
type _ t = Nil : nil t | Cons : ('x, 'fx) elt * 'x t -> 'fx t
#       Characters 83-99:
    let Cons(Elt dim, _) = sh in ()
        ^^^^^^^^^^^^^^^^
Error: This pattern matches values of type ('a -> $0 -> nil) t
       but a pattern was expected which matches values of type
         ('a -> 'b -> nil) t
       The type constructor $0 would escape its scope
# 
